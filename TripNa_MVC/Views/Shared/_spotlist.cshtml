@model IEnumerable<TripNa_MVC.Models.Spot>
@* @model Travel_project.Models.FilteredSpotsViewModel *@
<link href="/lib/jquery/dist/jquery.min.js" rel="stylesheet" />
<link href="/css/information.css" rel="stylesheet" />


@if (ViewData["NoResult"] != null)
{
	<div class="nullresult">@ViewData["NoResult"]</div>
}
else if (ViewData["FilteredCount"] != null)
{
	<div style="width:contain; color:darkslateblue;padding-left:80px;">共有 @ViewData["FilteredCount"] 項結果</div>

}
else
{
	<div style="width:90%; color:darkslateblue;padding-left:80px;">共有 @ViewData["SearchCount"] 項結果</div>
	
	@* <div>總共有 @ViewData["TotalCount"] 條記錄</div> *@
}
<br />


<div class="row row-cols-1 row-cols-md-3 g-4 row-cols-sm-1 g-4 row-cols-xl-3 g-4 row-cols-xxl-4 g-4" style="padding-left: calc(var(--bs-gutter-x)* 2);">
	@foreach (var spots in Model)
	{
		string img = "/景點圖片/" + spots.SpotCity + "/" + spots.SpotName + ".jpg";
		<div class="col">
			<div class="card" style="width:24rem;height:400px;  box-shadow: 0 3px 10px rgb(0,0,0,.2);">

				@* <img src="/_img/s1_car.png" alt="Alternate Text" width="200px" height="200px" style="position:absolute;left:0;" /> *@
				<div class="img-container" >
					<img src="@Url.Content(img)" class="img-fluid rounded-start" alt="Alternate Text" style="height:250px; position:relative;width:100%;" onclick="zoom(this)" />
					<div class="overlay">
						<span class="zoom-icon">&#128269;</span>
					</div>
				</div>


				@* <p class="card-text" style="background-color:#4e5482;color:white; width:80px;height:20px;text-align:center;border-radius:5px;position:absolute;bottom:38%;font-weight:700;margin-left:5px;">@restaurant.FoodType</p> *@
				<div class="card-body" style="overflow:auto;">


					<span onclick="SOPTLIKE(this)" class="heart-icon align-self-end favorite-btn" data-spot-id="@spots.SpotId">&#10084;</span>

					<div class="d-flex align-items-center">
						<h4 class="card-title" style="font-weight:800; font-size:1.2rem; margin-right: 0;margin-left: 28px;">@spots.SpotName</h4>

						<img src="/_img/S1_Car__1_-removebg-preview.png" alt="Alternate Text" height="55px" width="55px" style="position: absolute;left: 0;" />
					</div>
					<h5 class="card-title">@spots.SpotCity</h5>
					@* <h5 class="card-title" style="font-weight:800;">@spots.SpotName</h5> *@
					@* <p class="card-text">@spots.SpotBrief</p> *@
					<p class="card-text">@spots.SpotIntro</p>
	@* 				<button class="favorite-btn" data-spot-id="@spots.SpotId">收藏</button> *@
				</div>
			</div>
		</div>
	}
</div>


<style>

	.d-flex {
		display: flex;
	}

	.align-items-center {
		align-items: center;
	}
	.card-text, .card-title {
		font-size: .8rem;
	}

	.card {
		transition: transform 0.3s;
		/* z-index:3; */
	}

		.card:hover {
			/* transform: scale(1.05); */
			box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
			background-color: #cdcfee4f;
			transition-duration: 1s;
			.card-text, .card-title

	{
		font-size: 1rem;
	}

	}

	.img-container.zoomed {
		/* height: 350px;
			width: 350px; */
		object-fit: cover;
	}


	.img-container {
		position: relative;
		display: inline-block;
	}

	.overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background-color: rgba(0, 0, 0, 0.8);
		z-index: 0;
		display: none;
		justify-content: center;
		align-items: center;
	}

	.zoomed {
		position: fixed;
		top: 42%;
		left: 40%;
		transform: translate(-50%, -50%);
		z-index: 1;
		/* 	max-width: 50vw;
			max-height: 50vh;   */
		object-fit: cover;
		transform: scale(3);
		width: 300px;
		height: 250px;
	}

		.zoomed img {
			/* max-width: 90vw;
				max-height: 90vh; */
			width: 100%;
			height: 100%;}

</style>


@* <script>
	// 模擬用戶登入狀態
	function isUserLoggedIn() {
		// 在實際應用中，這應該是通過檢查會話、令牌等來完成
		// 這裡我們用一個簡單的變量來模擬
		return false; // 假設用戶未登入
	}

	// 模擬登入函數
	function login() {
		// 在實際應用中，這應該重定向到登入頁面或顯示登入對話框
		alert("重定向到登入頁面...");
		// window.location.href = @Url.Action("spots","Home");
	}

	const heartIcons = document.querySelectorAll('.heart-icon');

	heartIcons.forEach(function (heartIcon) {
		heartIcon.addEventListener('click', function () {
			if (isUserLoggedIn()) {
				// 用戶已登入，切換愛心狀態
				this.classList.toggle('filled');

				// 在這裡你可以發送 AJAX 請求到後端，保存收藏狀態
				const restaurantId = this.dataset.restaurantId;
				const isFavorite = this.classList.contains('filled');
				console.log(`餐廳 ID ${restaurantId} 收藏狀態: ${isFavorite}`);
			} else {
				// 用戶未登入，顯示警告並提供登入選項
				const wantToLogin = confirm("您需要登入才能收藏餐廳。是否現在登入？");
				if (wantToLogin) {
					login();
				}
			}
		});
	});

	</script> *@


			@* 	<script>

	$(function () {
		// 檢查用戶是否已登錄
		function isUserLoggedIn() {
			// 在這裡你需要根據實際情況檢查用戶是否已登錄
			// 例如,你可以檢查會話或令牌等信息
			return true; // 這裡我們假設用戶已登錄
		}

		// 處理收藏按鈕點擊事件
		$('.favorite-btn').click(function () {
			var spotId = $(this).data('spot-id');

			if (isUserLoggedIn()) {
				// 用戶已登錄,發送 AJAX 請求切換收藏狀態
				$.ajax({
					url: '/Home/ToggleFavorite',
					type: 'POST',
					data: { spotId: spotId },
					success: function (response) {
						// 處理服務器響應
						console.log(response);
					},
					error: function (xhr, status, error) {
						// 處理錯誤
						console.error(error);
					}
				});
			} else {
				// 用戶未登錄,提示登錄
				alert('您需要先登錄才能收藏景點');
			}
		});
	});
				</script> *@

	

<script>


	function SOPTLIKE(x) {

		var spotId = $(x).data('spot-id');
		var isFavorite = $(x).hasClass('favorited');



		$.ajax({
			url: '/Home/ToggleFavorite',
			type: 'POST',
			data: {
				spotId: spotId,
				isFavorite: isFavorite
			},
			success: function (response) {
				if (response.success) {
					// 切換收藏按鈕的狀態
					var $btn = $('.favorite-btn[data-spot-id="' + spotId + '"]');
					$btn.toggleClass('favorited');


				} else {
					// 處理錯誤
					alert(response.message);
				}
			},
			error: function (xhr, status, error) {
				// 處理錯誤
				console.error(error);
			}
		});
	}



	// ====================================================================================================

	function zoom(y) { 

	const imgContainers = document.querySelectorAll('.img-container');
	const overlay = document.createElement('div');
	overlay.classList.add('overlay');
	document.body.appendChild(overlay);

	imgContainers.forEach(container => {
		const img = container.querySelector('.img-zoom');
		container.addEventListener('click', () => {
			container.classList.toggle('zoomed');
			overlay.style.display = container.classList.contains('zoomed') ? 'flex' : 'none';
			if (container.classList.contains('zoomed')) {
				img.style.transform = 'scale(3)';
			} else {
				img.style.transform = 'none';
			}
		});
	});
}
			</script>